name: Build and Package TLA Proof Manager
on:
    push:
        branches-ignore:
            - 'gh_pages*'
    schedule:
        - cron: '42 5 5 * *'
jobs:
    website:
        name: Build website
        runs-on: ubuntu-latest
        # TODO: change the branch name on the next line
        # before merging these changes
        if: github.ref == 'refs/heads/website_to_markdown_and_cygwin_path_message'
        strategy:
            fail-fast: true
        steps:
            - uses: actions/checkout@master
            - name: Install APT packages
              run: |
                sudo apt install \
                  pandoc
            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                  python-version: '3.10'
            - name: Build website
              run: |
                set -o posix
                echo "Exported environment variables:"
                export -p
                cd doc/web
                make html_from_md
            - name: Push built website to `git` branch
              # TODO: rename `WEBSITE_BRANCH` to `gh_pages`
              # before merging these changes
              run: |
                WEBSITE_BRANCH="gh_pages_preview"
                WEBSITE_ROOT="doc/web/content"
                git config --global user.name 'GitHub Actions'
                git config --global user.email '<>'
                git remote rename origin github_repo
                git fetch github_repo $WEBSITE_BRANCH
                git checkout -b $WEBSITE_BRANCH
                git status
                git add -f $WEBSITE_ROOT
                git commit -m 'BIN: autogenerated website files

                committed by GitHub Actions.'
                # did the website change ?
                git diff \
                    --exit-code \
                    --quiet \
                    $WEBSITE_BRANCH \
                    github_repo/$WEBSITE_BRANCH \
                    -- $WEBSITE_ROOT \
                    || ret=$?
                if [[ "${ret}" -eq 1 ]]; then
                    echo 'The website changed,
                    will now push changes.'
                    # without `-f`, merging into preexisting
                    # autogenerated commits would be needed
                    git push -f github_repo $WEBSITE_BRANCH;
                else
                    echo 'The website did not change.
                    No git pushing to do.'
                fi
    test:
        name: Build TLAPS installer and test it
        runs-on: ${{ matrix.operating-system }}
        strategy:
            matrix:
                operating-system: [
                    macos-latest,
                    ubuntu-latest]
                ocaml-compiler: [
                    '0',
                    '1',
                    '2',
                    ]
        steps:
            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                python-version: '3.10'
            - uses: actions/checkout@v2
            - name: Get OCaml version
              run: |
                INDEX=${{ matrix.ocaml-compiler }}
                OCAML_VERSION=\
                `python .github/workflows/ocaml_versions.py $INDEX`
                echo "OCAML_VERSION=$OCAML_VERSION" \
                >> $GITHUB_ENV
                echo "OCAML_VERSION = $OCAML_VERSION"
            - uses: ocaml/setup-ocaml@v2
              with:
                ocaml-compiler: ${{ env.OCAML_VERSION }}
            - name: Build installer of TLAPS
              run: |
                eval $(opam env)
                ./configure
                cd tools/installer
                ./tlaps-release.sh
            - name: Define TLAPS-related env vars
              run: |
                python .github/workflows/setup_shell_env.py \
                    >> $GITHUB_ENV
            - name: Run installer of TLAPS
              run: |
                ./tools/installer/\
                ${{ env.INSTALLER }} -d .
            - name: Install dependencies for testing
              run: |
                opam install kaputt
            - name: Run a subset of `tlapm` tests
              run: |
                eval $(opam env)
                PATH=$(pwd)/bin:$(pwd)/lib/tlaps/bin:$PATH make test
            - name: Run all `tlapm` tests
              if: >-
                matrix.operating-system == 'ubuntu-latest' &&
                matrix.ocaml-compiler == '2'
              run: |
                ls -lah
                eval $(opam env)
                ocaml --version
                make
                PATH=$(pwd)/bin:$(pwd)/lib/tlaps/bin:$PATH which tlapm
                PATH=$(pwd)/bin:$(pwd)/lib/tlaps/bin:$PATH which zenon
                PATH=$(pwd)/bin:$(pwd)/lib/tlaps/bin:$PATH tlapm --version
                PATH=$(pwd)/bin:$(pwd)/lib/tlaps/bin:$PATH make testall
            - name: Print Test Results
              if: matrix.operating-system == 'ubuntu-latest'
              run: |
                cat test/tests.log
